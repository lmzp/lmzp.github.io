<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ROS与stm32通信</title>
    <url>/2023/12/14/ROS%E4%B8%8Estm32%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<h3 id="rosserial"><a href="#rosserial" class="headerlink" title="rosserial"></a>rosserial</h3><h4 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h4><p>ROS提供的一种嵌入式节点和运行在主控PC上的ros master通信的方式，使得在嵌入式节点上编写、运行ros节点成为可能，主要用于转接IO和各类传感器，运行底层控制算法。要使用rosserial，需要分别在嵌入式板卡和主控PC上部署。</p>
<h4 id="2-结果"><a href="#2-结果" class="headerlink" title="2. 结果"></a>2. 结果</h4><p>移植成功后可以将<strong>stm32</strong>当成一个<strong>节点</strong>直接订阅ros通信网络上的话题，即可以直接往ros的通信网络发布话题。<br><strong>RosLibs下载链接：<a href="https://www.123pan.com/s/00f0Vv-MnAq.html">https://www.123pan.com/s/00f0Vv-MnAq.html</a></strong></p>
<h3 id="stm32-端配置"><a href="#stm32-端配置" class="headerlink" title="stm32 端配置"></a>stm32 端配置</h3><h4 id="1-创建CUBEMX工程"><a href="#1-创建CUBEMX工程" class="headerlink" title="1. 创建CUBEMX工程"></a>1. 创建CUBEMX工程</h4><h5 id="RCC配置"><a href="#RCC配置" class="headerlink" title="RCC配置"></a>RCC配置</h5><p><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hkto81k6z7j30su0futeo.jpg" alt="image.png"></p>
<h5 id="SYS配置"><a href="#SYS配置" class="headerlink" title="SYS配置"></a>SYS配置</h5><p><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hkto9vryroj30su0hhq8u.jpg" alt="image.png"></p>
<h5 id="定时器配置"><a href="#定时器配置" class="headerlink" title="定时器配置"></a>定时器配置</h5><p>我所用芯片时钟最高100MHZ，预分频系数设置为<code>10000</code>，自动重装载值为<code>0xffffffff</code>。最好是高级定时器和部分通用定时器，要求ARR寄存器是32位，使定时器计数频率为1K。<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktobubclgj30tw0l8k0z.jpg" alt="image.png"></p>
<h5 id="usart"><a href="#usart" class="headerlink" title="usart"></a>usart</h5><ul>
<li>打开串口中断，波特率设置为57600，因为这是serial_node的默认参数，方便。<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktolr86t5j31ei0k348d.jpg" alt="image.png"></li>
<li>打开串口DMA<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktoogyhikj30np06jgor.jpg" alt="image.png"></li>
</ul>
<h5 id="时钟树"><a href="#时钟树" class="headerlink" title="时钟树"></a>时钟树</h5><p>直接输入最大100，回车，自动配置。<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktorcm6e0j312n0gldn6.jpg" alt="image.png"></p>
<h5 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h5><p>选好路径，设置好名称，生成工程，并在keil中打开并编译。<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktosktwc4j31370f0gsb.jpg" alt="image.png"></p>
<h4 id="2-keil工程配置"><a href="#2-keil工程配置" class="headerlink" title="2. keil工程配置"></a>2. keil工程配置</h4><ul>
<li><p>将RosLibs文件夹复制粘贴到我们的工程文件夹下，这个文件夹是arduino移植过程生成的，里面储存的是ROS的各种消息类型，方便以后调用。<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktozdiwx7j30wk0a7djq.jpg" alt="image.png"></p>
</li>
<li><p>将刚才加进来的文件添加进32的工程<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktp2qyd78j30wm0jcagr.jpg" alt="image.png"></p>
</li>
</ul>
<p><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktp4ijw33j30n20gmtck.jpg" alt="1702564913659.png"></p>
<ul>
<li><p>由于ros数据类型是以类的方式写好的，属于C++的特性，所以我们的32工程需要进行C与C++的混编，同时我们添加数据类型文件的路径。<code>--cpp</code><br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktp6yrb4hj30n50hvjyq.jpg" alt="1702565054471.png"></p>
</li>
<li><p>在main.c文件调用mainpp.cpp的函数，记住要添加mainpp.cpp的头文件，并添加<code>setup()</code>与<code>loop()</code>函数。<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktp8sxzg8j30nx087adj.jpg" alt="image.png"><br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktpa6p7n1j30l70b9goz.jpg" alt="image.png"></p>
</li>
<li><p>如果移植到其他板子，修改<br><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktplsgc4cj30w60e7k0q.jpg" alt="image.png"></p>
</li>
</ul>
<blockquote>
<p>编译后我们可以看到编译是通过的，但是有15个警告，不要慌，这是由于keil对C++的支持不太好，但是不影响我们使用。烧录进去后，使用USB转TTL连接Ubuntu测试。</p>
</blockquote>
<h3 id="ROS端配置"><a href="#ROS端配置" class="headerlink" title="ROS端配置"></a>ROS端配置</h3><h4 id="1-安装rosserial"><a href="#1-安装rosserial" class="headerlink" title="1. 安装rosserial"></a>1. 安装rosserial</h4><p>打开终端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-serial</span><br><span class="line">sudo apt-get install ros-noetic-rosserial</span><br><span class="line">sudo apt-get install ros-noetic-rosserial-arduino</span><br></pre></td></tr></table></figure>

<h4 id="2-测试"><a href="#2-测试" class="headerlink" title="2. 测试"></a>2. 测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看是否连接到系统</span></span><br><span class="line"><span class="built_in">ls</span> -l /dev |grep ttyUSB</span><br><span class="line"><span class="comment">#提高串口权限</span></span><br><span class="line">sudo <span class="built_in">chmod</span> 777 /dev/ttyUSB0</span><br><span class="line"><span class="comment">#运行测试</span></span><br><span class="line">roscore</span><br><span class="line">rosrun rosserial_python serial_node.py</span><br></pre></td></tr></table></figure>

<p>新开两个终端，分别输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rostopic <span class="built_in">echo</span> /stm32_to_pc </span><br><span class="line">rostopic pub -r 1 pc_to_stm32 std_msgs/String hello</span><br></pre></td></tr></table></figure>
<blockquote>
<p>发布话题 &#x2F;pc_to_stm32 ,同时我们可以看到STM32通过话题&#x2F;stm32_to_pc将数据转反回来，到这里就说明我们移植成功了。</p>
</blockquote>
<p><img src="https://i0.wp.com/tva1.sinaimg.cn/large/008BZDgigy1hktpu22fnnj30v80dvqbb.jpg" alt="image.png"></p>
<p>参考链接</p>
<p><a href="https://blog.csdn.net/strangechen/article/details/89367433">ROS学习笔记–移植rosserial到stm32</a><br><a href="https://blog.csdn.net/qq_37416258/article/details/84844051">rosserial移植到STM32(CUBEMX+HAL库)</a><br><a href="https://blog.csdn.net/leida_wt/article/details/109690562">在STM32上运行ROS节点——rosserial</a></p>
]]></content>
      <categories>
        <category>ROS</category>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ros</tag>
        <tag>stm32</tag>
        <tag>嵌入式</tag>
      </tags>
  </entry>
  <entry>
    <title>root</title>
    <url>/2021/11/21/root/</url>
    <content><![CDATA[<p><strong>Magisk</strong> : </p>
<ul>
<li><a href="https://github.com/topjohnwu/Magisk/releases">Github</a>   </li>
<li><a href="https://magiskcn.com/">Magisk中文网</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot flash [镜像] [镜像文件地址]</span><br></pre></td></tr></table></figure>

<p>刷入boot</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot flash boot_ab boot.img</span><br></pre></td></tr></table></figure>


<p><strong>LSPosed</strong> : <a href="https://github.com/LSPosed/LSPosed/releases">Github</a>   </p>
<p><strong>Uperf</strong> : <a href="https://github.com/yc9559/uperf/releases">Github</a> </p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Root</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS架构</title>
    <url>/2023/10/20/ROS%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h3 id="1-ROS安装目录"><a href="#1-ROS安装目录" class="headerlink" title="1. ROS安装目录"></a>1. ROS安装目录</h3><p><em>ROS默认安装在</em><code>/opt/ros/noetic</code><em>路径下。</em></p>
<p><img src="https://i0.wp.com/tvax2.sinaimg.cn/large/008BeftEly1hj41so1yzcj30ol0gd0vl.jpg" alt="5415"></p>
<table>
<thead>
<tr>
<th>bin文件夹</th>
<th>放置的是一些在终端可执行的命令</th>
</tr>
</thead>
<tbody><tr>
<td>etc文件夹</td>
<td>存放ros和catkin配置文件</td>
</tr>
<tr>
<td>include文件夹</td>
<td>通过终端安装的功能包代码的头文件</td>
</tr>
<tr>
<td>lib文件夹</td>
<td>通过终端安装的一些可执行功能包的节点</td>
</tr>
<tr>
<td>share文件夹</td>
<td>cmake的配置文件、话题消息的具体格式、服务的接口信息等</td>
</tr>
</tbody></table>
<p><img src="https://i0.wp.com/tvax3.sinaimg.cn/large/008BeftEly1hj41v7h6t0j30y80d5goe.jpg" alt="img"></p>
<h3 id="2-ROS文件系统级"><a href="#2-ROS文件系统级" class="headerlink" title="2. ROS文件系统级"></a>2. ROS文件系统级</h3><p><img src="https://i0.wp.com/tvax2.sinaimg.cn/large/008BeftEly1hj41w6tngyj31040jdgo0.jpg" alt="img"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WorkSpace --- 自定义的工作空间</span><br><span class="line"></span><br><span class="line">    |--- build:编译空间，用于存放CMake和catkin的缓存信息、配置信息和其他中间文件。</span><br><span class="line"></span><br><span class="line">    |--- devel:开发空间，用于存放编译后生成的目标文件，包括头文件、动态&amp;静态链接库、可执行文件等。</span><br><span class="line"></span><br><span class="line">    |--- src: 源码</span><br><span class="line"></span><br><span class="line">        |-- package：功能包(ROS基本单元)包含多个节点、库与配置文件，包名所有字母小写，只能由字母、数字与下划线组成</span><br><span class="line"></span><br><span class="line">            |-- CMakeLists.txt 配置编译规则，比如源文件、依赖项、目标文件</span><br><span class="line"></span><br><span class="line">            |-- package.xml 包信息，比如:包名、版本、作者、依赖项...(以前版本是 manifest.xml)</span><br><span class="line"></span><br><span class="line">            |-- scripts 存储python文件</span><br><span class="line"></span><br><span class="line">            |-- src 存储C++源文件</span><br><span class="line"></span><br><span class="line">            |-- include 头文件</span><br><span class="line"></span><br><span class="line">            |-- msg 消息通信格式文件</span><br><span class="line"></span><br><span class="line">            |-- srv 服务通信格式文件</span><br><span class="line"></span><br><span class="line">            |-- action 动作格式文件</span><br><span class="line"></span><br><span class="line">            |-- launch 可一次性运行多个节点 </span><br><span class="line"></span><br><span class="line">            |-- config 配置信息</span><br><span class="line"></span><br><span class="line">        |-- CMakeLists.txt: 编译的基本配置</span><br></pre></td></tr></table></figure>

<h4 id="2-1-查看当前使用工作空间"><a href="#2-1-查看当前使用工作空间" class="headerlink" title="2.1. 查看当前使用工作空间"></a>2.1. 查看当前使用工作空间</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$ROS_PACKAGE_PATH</span></span><br></pre></td></tr></table></figure>

<p>显示：&#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share</p>
<h4 id="2-2-创建工作空间"><a href="#2-2-创建工作空间" class="headerlink" title="2.2. 创建工作空间"></a>2.2. 创建工作空间</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/catkin_ws/src		<span class="comment">#在主文件夹下创建空文件夹</span></span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src          <span class="comment">#进入src文件夹</span></span><br><span class="line">catkin_init_workspace       <span class="comment">#初始化工作空间</span></span><br></pre></td></tr></table></figure>

<p>此时 src 文件夹下将生成一个 CMakeLists.txt 文件。</p>
<h4 id="2-3-编译工作空间"><a href="#2-3-编译工作空间" class="headerlink" title="2.3. 编译工作空间"></a>2.3. 编译工作空间</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/				<span class="comment">#回到工作空间，编译必须在此文件夹下</span></span><br><span class="line">catkin_make                 <span class="comment">#进行编译</span></span><br></pre></td></tr></table></figure>

<h4 id="2-4-把工作空间添加到ROS环境变量"><a href="#2-4-把工作空间添加到ROS环境变量" class="headerlink" title="2.4. 把工作空间添加到ROS环境变量"></a>2.4. 把工作空间添加到ROS环境变量</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source ~/catkin_ws/devel/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>在每次编译之后要使用<code>source ~/catkin_ws/devel/setup.bash</code>指令刷新 devel 目录下的setup.bash文件，将生成的文件手动刷新到系统环境中，将此指令加入~&#x2F;.bashrc文件中，在终端启动时都会自动执行这个文件的命令，所以就不必在手动刷新环境。😅</p>
<h4 id="2-5-创建ROS功能包"><a href="#2-5-创建ROS功能包" class="headerlink" title="2.5. 创建ROS功能包"></a>2.5. 创建ROS功能包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">catkin_create_pkg <span class="built_in">test</span> std_msgs rospy roscpp</span><br></pre></td></tr></table></figure>

<p>使用<code>catkin_create_pkg</code>指令在src文件夹下创建一个名称为test的功能包，依赖于std_msgs rospy roscpp。</p>
<h4 id="2-6-编译ROS功能包"><a href="#2-6-编译ROS功能包" class="headerlink" title="2.6. 编译ROS功能包"></a>2.6. 编译ROS功能包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/				<span class="comment">#回到工作空间，编译必须在此文件夹下</span></span><br><span class="line">catkin_make                 <span class="comment">#进行编译</span></span><br></pre></td></tr></table></figure>

<h3 id="3-ROS计算图级"><a href="#3-ROS计算图级" class="headerlink" title="3. ROS计算图级"></a>3. ROS计算图级</h3><p><img src="https://i0.wp.com/tvax3.sinaimg.cn/large/008BeftEly1hj41x2gk9ij30gs0a1ta6.jpg" alt="img"></p>
<p>rqt_graph能够创建一个显示当前系统运行情况的动态图形。ROS 分布式系统中不同进程需要进行数据交互，计算图可以以点对点的网络形式表现数据交互过程。rqt_graph是rqt程序包中的一部分。  </p>
<p><img src="https://i0.wp.com/tvax3.sinaimg.cn/large/008BeftEly1hj41xyvci1j30y00vh411.jpg" alt="img"></p>
<h3 id="4-ROS开源社区级"><a href="#4-ROS开源社区级" class="headerlink" title="4. ROS开源社区级"></a>4. ROS开源社区级</h3><p>通过独立的网络社区，用户可以共享和获取知识、算法和代码。开源社区的大力支持使ROS得以快速成长。</p>
<ul>
<li><strong>发行版（Distribution）</strong> ROS发行版是可以独立安装、带有版本号的一系列综合功能包。ROS发行版像Linux发行版一样发挥类似的作用。这使得ROS软件安装更加容易，而且能够通过一个软件集合维持一致的版本。 </li>
<li><strong>软件库（Repository）</strong> ROS依赖于共享开源代码与软件库的网站或主机服务，在这里不同的机构能够发布和分享各自的机器人软件与程序。 </li>
<li><strong>ROS维基（ROS Wiki）</strong> ROS Wiki是用于记录有关ROS系统信息的主要论坛。任何人都可以注册账户、贡献自己的文件、提供更正或更新、编写教程以及其他行为。网址是<a href="https://link.zhihu.com/?target=http://wiki.ros.org/">http://wiki.ros.org/</a>。 </li>
<li><strong>Bug提交系统（Bug Ticket System）</strong> 如果你发现问题或者想提出一个新功能，ROS提供这个资源去做这些。 </li>
<li><strong>邮件列表（Mailing list）</strong> ROS用户邮件列表是关于ROS的主要交流渠道，能够像论坛一样交流从ROS软件更新到ROS软件使用中的各种疑问或信息。网址是<a href="https://link.zhihu.com/?target=http://lists.ros.org/">http://lists.ros.org/</a>。 </li>
<li><strong>ROS问答（ROS Answer）</strong> 用户可以使用这个资源去提问题。网址是<a href="https://link.zhihu.com/?target=https://answers.ros.org/questions/">https://answers.ros.org/questions/</a>。</li>
<li><strong>博客（Blog）</strong> 你可以看到定期更新、照片和新闻。网址是<a href="https://link.zhihu.com/?target=https://www.ros.org/news/">https://www.ros.org/news/</a>，不过博客系统已经退休，ROS社区取而代之，网址是<a href="https://link.zhihu.com/?target=https://discourse.ros.org/">https://discourse.ros.org/</a>。 为了便于理解，下图给出了ROS资源社区的组织形式。</li>
</ul>
<hr>
<p>几个学习网站</p>
<ul>
<li><a href="http://www.autolabor.com.cn/book/ROSTutorials/">Autolabor</a></li>
<li><a href="https://www.guyuehome.com/">古月居</a></li>
</ul>
<hr>
<h3 id="5-常用包管理指令"><a href="#5-常用包管理指令" class="headerlink" title="5. 常用包管理指令"></a>5. 常用包管理指令</h3><ol>
<li><strong>rospack</strong></li>
</ol>
<p>查看某个 pkg 的地址：<code>rospack fand [package_name]</code></p>
<ol start="2">
<li><strong>roscd</strong></li>
</ol>
<p>跳转到某个 pkg 路径下：<code>roscd [package_name]</code></p>
<ol start="3">
<li><strong>rosls</strong></li>
</ol>
<p>列举某个 pkg 下的文件信息：<code>rosls [package_name]</code></p>
<ol start="4">
<li><strong>rosed</strong></li>
</ol>
<p>编辑 pkg 中的文件：<code>rosed [package_name] [file_name]</code></p>
<ol start="5">
<li><strong>catkin_create_pkg</strong></li>
</ol>
<p>创建一个 pkg：<code>catkin_create_pkg [package_name] [deps]</code></p>
<ol start="6">
<li><strong>rosdep</strong></li>
</ol>
<p>安装某个功能包所需依赖：<code>rosdep install [package_name]</code></p>
]]></content>
      <categories>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ros</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32与NBIOT智慧农业</title>
    <url>/2023/07/21/STM32%E4%B8%8ENBIOT%E6%99%BA%E6%85%A7%E5%86%9C%E4%B8%9A/</url>
    <content><![CDATA[<h2 id="整体介绍"><a href="#整体介绍" class="headerlink" title="整体介绍"></a>整体介绍</h2><p> <strong>1. 主控</strong><br>&emsp;&emsp;采用搭载STM32L4R5ZI低功耗芯片的ST官方NUCLEO-L4R5ZI开发板，使用stm32cubeMX配置，HAL库开发。<br><img src="https://i0.wp.com/tvax4.sinaimg.cn/large/008BeftEly1hj3a2ybyvpj30i90hrgtl.jpg" alt="l4r5zi"></p>
<p> <strong>2. 传感器部分</strong><br>&emsp;&emsp;使用DHT11采集环境温湿度，BH1750采集光照强度，采用电容式土壤湿度传感器，JW01 CO2,HCHO,TVOC三合一传感器。<br> <strong>3. 按键开关</strong><br>&emsp;&emsp;使用了一个RGB灯来代表植物生长灯，设有红、蓝、绿、白四种颜色；配备6个按键，分别控制RGB灯、板载LED2、4路继电器。<br> <strong>4. NB-IOT</strong><br>&emsp;&emsp;采用安信可EC-01F-kit开发板，通过串口与单片机通讯。<br><img src="https://i0.wp.com/tvax4.sinaimg.cn/mw690/008BeftEly1hj3a465m8cj30ff0e2q5t.jpg" alt="nb"><br> <strong>5. 阿里云物联网平台</strong><br>&emsp;&emsp;将采集到的数据通过NB-IOT模组通过MQTT协议发送到阿里云物联网平台，并利用IOT-Studio简单绘制用户端页面。</p>
<p><img src="https://i0.wp.com/tvax4.sinaimg.cn/mw690/008BeftEly1hj3a5k4xmtj31hc0qudva.jpg" alt="ali"></p>
<p><img src="https://i0.wp.com/tvax3.sinaimg.cn/mw690/008BeftEly1hj3a6eo35zj30v7183wgm.jpg" alt="liuc"></p>
<hr>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p> <strong>1. 时钟，定时器配置</strong><br>&emsp;&emsp;首先配置RCC,SYS。其次配置定时器TIM1实现微秒级延时，用来读取DHT11温湿度数据，具体可以参考DHT11数据手册。<br><img src="https://i0.wp.com/tvax2.sinaimg.cn/mw690/008BeftEly1hj3a75w7yvj30ho05x765.jpg" alt="tim1"></p>
<p> <strong>2. 引脚配置</strong></p>
<table>
<thead>
<tr>
<th>GPIO</th>
<th>引脚</th>
<th>对应功能</th>
</tr>
</thead>
<tbody><tr>
<td>推挽输出</td>
<td>PB7,PF15</td>
<td>主灯和DHT11温湿度传感器</td>
</tr>
<tr>
<td>LPUART</td>
<td>PG7(TX),PG8(RX)</td>
<td>与上位机通信串口，通过板载usb连接</td>
</tr>
<tr>
<td>USART2</td>
<td>PD5(TX),PD6(RX)</td>
<td>JW01二氧化碳传感器</td>
</tr>
<tr>
<td>I2C1</td>
<td>PB8(SCL),PB9(SDA)</td>
<td>BH1750光照强度传感器</td>
</tr>
<tr>
<td>TIM2</td>
<td>PA0,PA1,PA2</td>
<td>RGB植物生长灯</td>
</tr>
<tr>
<td>推挽输出</td>
<td>PG10,PG11,PG13,PG15</td>
<td>四路继电器开关</td>
</tr>
<tr>
<td>上拉输入(EXTI)</td>
<td>PA4,PB0,PC1,PD3,PD12,PG2</td>
<td>按键中断，分别控制主灯,RGB,四个继电器</td>
</tr>
<tr>
<td>ADC1_IN1</td>
<td>PC0</td>
<td>土壤湿度传感器</td>
</tr>
</tbody></table>
<blockquote>
<p>继电器可连接水泵，风扇等，实现控制开关。</p>
</blockquote>
<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><ol>
<li>DHT11温湿度传感器<br>DHT11.C</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> TIM_HandleTypeDef htim1;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">DATA_OUTPUT</span><span class="params">(u8 flg)</span>;<span class="comment">//DATA输出</span></span><br><span class="line"><span class="type">static</span> u8 <span class="title function_">DATA_INPUT</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//DATA输入</span></span><br><span class="line"><span class="type">static</span> u8 <span class="title function_">DH11_Read_Byte</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//DH11读信号</span></span><br><span class="line"></span><br><span class="line">u8 <span class="title function_">DH11_Read</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//读取DH11温度和湿度</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">Test</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//测试程序</span></span><br><span class="line"></span><br><span class="line">DH11_DATA DH11_data;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_us</span><span class="params">(<span class="type">uint16_t</span> us)</span></span><br><span class="line">&#123;     <span class="comment">//微秒延时</span></span><br><span class="line">	<span class="type">uint16_t</span> differ = <span class="number">0xffff</span>-us<span class="number">-5</span>;				</span><br><span class="line">	__HAL_TIM_SET_COUNTER(&amp;htim1,differ);	<span class="comment">//设定TIM1计数器起始值</span></span><br><span class="line">	HAL_TIM_Base_Start(&amp;htim1);		<span class="comment">//启动定时器	</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(differ &lt; <span class="number">0xffff</span><span class="number">-5</span>)&#123;	<span class="comment">//判断</span></span><br><span class="line">		differ = __HAL_TIM_GET_COUNTER(&amp;htim1);		<span class="comment">//查询计数器的计数值</span></span><br><span class="line">	&#125;</span><br><span class="line">	HAL_TIM_Base_Stop(&amp;htim1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DATA_OUTPUT</span><span class="params">(u8 flg)</span></span><br><span class="line">&#123;</span><br><span class="line">  	GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	</span><br><span class="line">	GPIO_InitStruct.Pin = DATA_Pin;</span><br><span class="line">	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">	GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">	HAL_GPIO_Init(DATA_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(flg==<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		DATA_RESET();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		DATA_SET();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u8 <span class="title function_">DATA_INPUT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  	GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	u8 flg=<span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	GPIO_InitStruct.Pin = DATA_Pin;</span><br><span class="line">  	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  	GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  	HAL_GPIO_Init(DATA_GPIO_Port, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(DATA_READ()==GPIO_PIN_RESET)</span><br><span class="line">	&#123;</span><br><span class="line">		flg=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		flg=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> flg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u8 <span class="title function_">DH11_Read_Byte</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    u8 ReadDat=<span class="number">0</span>;</span><br><span class="line">    u8 temp=<span class="number">0</span>;</span><br><span class="line">    u8 retry=<span class="number">0</span>;</span><br><span class="line">    u8 i=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">while</span>(DATA_READ()==<span class="number">0</span>&amp;&amp;retry&lt;<span class="number">100</span>)<span class="comment">//等待直到DHT11输出高电平</span></span><br><span class="line">      &#123;</span><br><span class="line">        Delay_us(<span class="number">1</span>);</span><br><span class="line">        retry++;</span><br><span class="line">      &#125;</span><br><span class="line">      retry=<span class="number">0</span>;</span><br><span class="line">      Delay_us(<span class="number">40</span>);</span><br><span class="line">      <span class="keyword">if</span>(DATA_READ()==<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        temp=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        temp=<span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span>(DATA_READ()==<span class="number">1</span>&amp;&amp;retry&lt;<span class="number">100</span>)<span class="comment">//等待直到DHT11输出低电平，表示退出。本轮1bit信号接收完毕。</span></span><br><span class="line">      &#123;</span><br><span class="line">        Delay_us(<span class="number">1</span>);</span><br><span class="line">        retry++;</span><br><span class="line">      &#125;</span><br><span class="line">      retry=<span class="number">0</span>;</span><br><span class="line">      ReadDat&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">      ReadDat|=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> ReadDat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u8 <span class="title function_">DH11_Read</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  u8 retry=<span class="number">0</span>;</span><br><span class="line">  u8 i=<span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  DATA_OUTPUT(<span class="number">0</span>);<span class="comment">//设置为输出模式MCU向DH11发送信号</span></span><br><span class="line">  HAL_Delay(<span class="number">18</span>);</span><br><span class="line">  DATA_SET();</span><br><span class="line">  Delay_us(<span class="number">20</span>);</span><br><span class="line">  </span><br><span class="line">  DATA_INPUT();<span class="comment">//设置为输入模式DH11向MCU发送信号</span></span><br><span class="line">  Delay_us(<span class="number">20</span>);</span><br><span class="line">  <span class="keyword">if</span>(DATA_READ()==<span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">while</span>(DATA_READ()==<span class="number">0</span>&amp;&amp;retry&lt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      Delay_us(<span class="number">1</span>);</span><br><span class="line">      retry=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    retry=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(DATA_READ()==<span class="number">1</span>&amp;&amp;retry&lt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      Delay_us(<span class="number">1</span>);</span><br><span class="line">      retry++;</span><br><span class="line">    &#125;</span><br><span class="line">    retry=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)<span class="comment">//Data[0]湿度， Data[2]温度。Data[1]和Data[3]分别为0和2的小数位。Data[4]用于校验。</span></span><br><span class="line">    &#123;</span><br><span class="line">      DH11_data.Data[i]=DH11_Read_Byte();</span><br><span class="line">    &#125;</span><br><span class="line">    Delay_us(<span class="number">50</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  u32 sum=DH11_data.Data[<span class="number">0</span>]+DH11_data.Data[<span class="number">1</span>]+DH11_data.Data[<span class="number">2</span>]+DH11_data.Data[<span class="number">3</span>];<span class="comment">//校验</span></span><br><span class="line">  <span class="keyword">if</span>((sum)==DH11_data.Data[<span class="number">4</span>])</span><br><span class="line">  &#123;</span><br><span class="line">    DH11_data.humidity=DH11_data.Data[<span class="number">0</span>];<span class="comment">//获取湿度</span></span><br><span class="line">    DH11_data.temp=DH11_data.Data[<span class="number">2</span>];<span class="comment">//获取温度</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(DH11_Read())</span><br><span class="line">  &#123;</span><br><span class="line">    DH11_data.index++;</span><br><span class="line">    <span class="keyword">if</span>(DH11_data.index&gt;=<span class="number">128</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      DH11_data.index=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DH11_Task</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">     Test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>DHT11.H</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _DH11_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _DH11_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8 unsigned char </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned short</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u32 unsigned int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//DATA IO的定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATA_SET() HAL_GPIO_WritePin(DATA_GPIO_Port, DATA_Pin, GPIO_PIN_SET)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATA_RESET() HAL_GPIO_WritePin(DATA_GPIO_Port, DATA_Pin, GPIO_PIN_RESET)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATA_READ() HAL_GPIO_ReadPin(DATA_GPIO_Port,DATA_Pin)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  u8 Data[<span class="number">5</span>];<span class="comment">//数据存放数组</span></span><br><span class="line">  u8 index;</span><br><span class="line">  u8 temp;<span class="comment">//温度</span></span><br><span class="line">  u8 humidity;<span class="comment">//湿度</span></span><br><span class="line">  </span><br><span class="line">&#125;DH11_DATA;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> DH11_DATA DH11_data;<span class="comment">//DH11属性封装</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DH11_Task</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//后台轮询调用</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATA_Pin GPIO_PIN_15</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATA_GPIO_Port GPIOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>实现</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  HAL_TIM_Base_Start(&amp;htim1);</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    DH11_Task();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>BH1750光照强度传感器<br>BH1750.C</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bh1750.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;i2c.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*i2c句柄*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bh1750_i2c hi2c1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*内部函数声明区*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span>	<span class="title function_">BH1750_Send_Cmd</span><span class="params">(BH1750_MODE cmd)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> <span class="title function_">BH1750_Read_Dat</span><span class="params">(<span class="type">uint8_t</span>* dat)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">uint16_t</span> <span class="title function_">BH1750_Dat_To_Lux</span><span class="params">(<span class="type">uint8_t</span>* dat)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief	向BH1750发送一条指令</span></span><br><span class="line"><span class="comment"> * @param	cmd —— BH1750工作模式指令（在BH1750_MODE中枚举定义）</span></span><br><span class="line"><span class="comment"> * @retval	成功返回HAL_OK</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span>	<span class="title function_">BH1750_Send_Cmd</span><span class="params">(BH1750_MODE cmd)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> HAL_I2C_Master_Transmit(&amp;bh1750_i2c, BH1750_ADDR_WRITE, (<span class="type">uint8_t</span>*)&amp;cmd, <span class="number">1</span>, <span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief	从BH1750接收一次光强数据</span></span><br><span class="line"><span class="comment"> * @param	dat —— 存储光照强度的地址（两个字节数组）</span></span><br><span class="line"><span class="comment"> * @retval	成功 —— 返回HAL_OK</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> <span class="title function_">BH1750_Read_Dat</span><span class="params">(<span class="type">uint8_t</span>* dat)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> HAL_I2C_Master_Receive(&amp;bh1750_i2c, BH1750_ADDR_READ, dat, <span class="number">2</span>, <span class="number">0XFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief	将BH1750的两个字节数据转换为光照强度值（0-65535）</span></span><br><span class="line"><span class="comment"> * @param	dat  —— 存储光照强度的地址（两个字节数组）</span></span><br><span class="line"><span class="comment"> * @retval	成功 —— 返回光照强度值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint16_t</span> <span class="title function_">BH1750_Dat_To_Lux</span><span class="params">(<span class="type">uint8_t</span>* dat)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">uint16_t</span> lux = <span class="number">0</span>;</span><br><span class="line">	lux = dat[<span class="number">0</span>];</span><br><span class="line">	lux &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">	lux |= dat[<span class="number">1</span>];</span><br><span class="line">	lux = (<span class="type">int</span>)(lux / <span class="number">1.2</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> lux;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief	返回光照强度值</span></span><br><span class="line"><span class="comment"> * @param	无</span></span><br><span class="line"><span class="comment"> * @retval	成功 —— 返回光照强度值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">Get_BH1750_Value</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">uint8_t</span> dat[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;		<span class="comment">//dat[0]是高字节，dat[1]是低字节</span></span><br><span class="line">	<span class="type">uint16_t</span> lux;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(HAL_OK != BH1750_Send_Cmd(ONCE_H_MODE))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	HAL_Delay(<span class="number">120</span>);</span><br><span class="line">	<span class="keyword">if</span>(HAL_OK != BH1750_Read_Dat(dat))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	lux = BH1750_Dat_To_Lux(dat);</span><br><span class="line">	<span class="keyword">return</span> lux;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>BH1750.H</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __BH1750_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __BH1750_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdint.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*外部函数区*/</span></span><br><span class="line"><span class="comment">/*通过指针获取光照强度值*/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">Get_BH1750_Value</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*	//用法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	uint16_t bh1750_lux;</span></span><br><span class="line"><span class="comment">	bh1750_lux = Get_BH1750_Value();</span></span><br><span class="line"><span class="comment">	printf(&quot;current: %5d lux\r\n&quot;, bh1750_lux);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*bh1750地址*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>	BH1750_ADDR_WRITE	0x46	<span class="comment">//01000110</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>	BH1750_ADDR_READ	0x47	<span class="comment">//01000111</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	POWER_OFF_CMD	=	<span class="number">0x00</span>,	<span class="comment">//断电：无激活状态</span></span><br><span class="line">	POWER_ON_CMD	=	<span class="number">0x01</span>,	<span class="comment">//通电：等待测量指令</span></span><br><span class="line">	RESET_REGISTER	=	<span class="number">0x07</span>,	<span class="comment">//重置数字寄存器（在断电状态下不起作用）</span></span><br><span class="line">	CONT_H_MODE		=	<span class="number">0x10</span>,	<span class="comment">//连续H分辨率模式：在11x分辨率下开始测量，测量时间120ms</span></span><br><span class="line">	CONT_H_MODE2	=	<span class="number">0x11</span>,	<span class="comment">//连续H分辨率模式2：在0.51x分辨率下开始测量，测量时间120ms</span></span><br><span class="line">	CONT_L_MODE		=	<span class="number">0x13</span>,	<span class="comment">//连续L分辨率模式：在411分辨率下开始测量，测量时间16ms</span></span><br><span class="line">	ONCE_H_MODE		=	<span class="number">0x20</span>,	<span class="comment">//一次高分辨率模式：在11x分辨率下开始测量，测量时间120ms，测量后自动设置为断电模式</span></span><br><span class="line">	ONCE_H_MODE2	=	<span class="number">0x21</span>,	<span class="comment">//一次高分辨率模式2：在0.51x分辨率下开始测量，测量时间120ms，测量后自动设置为断电模式</span></span><br><span class="line">	ONCE_L_MODE		=	<span class="number">0x23</span>	<span class="comment">//一次低分辨率模式：在411x分辨率下开始测量，测量时间16ms，测量后自动设置为断电模式</span></span><br><span class="line">&#125; BH1750_MODE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/*__BH1750_H_*/</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>实现</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> lux;</span><br><span class="line">lux = Get_BH1750_Value();</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>JW01二氧化碳传感器<br>采用串口中断与DMA接收数据。</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//串口中断回调函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">uint8_t</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(huart -&gt; Instance == USART3)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(rx_buf[<span class="number">0</span>] == <span class="number">44</span>)&#123;</span><br><span class="line">			</span><br><span class="line">			tvoc = (rx_buf[<span class="number">2</span>]*<span class="number">256</span>+rx_buf[<span class="number">3</span>]) * <span class="number">0.001</span>;</span><br><span class="line">			ch2o = (rx_buf[<span class="number">4</span>]*<span class="number">256</span>+rx_buf[<span class="number">5</span>]) * <span class="number">0.001</span>;</span><br><span class="line">			co2  = (rx_buf[<span class="number">6</span>]*<span class="number">256</span>+rx_buf[<span class="number">7</span>]);</span><br><span class="line">			</span><br><span class="line">			HAL_UART_Receive_DMA((UART_HandleTypeDef *)&amp;huart3, (<span class="type">uint8_t</span> *)rx_buf, <span class="number">9</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			HAL_UART_DMAStop((UART_HandleTypeDef *)&amp;huart3);</span><br><span class="line">			HAL_Delay(<span class="number">10</span>);</span><br><span class="line">			HAL_UART_Receive_DMA((UART_HandleTypeDef *)&amp;huart3, (<span class="type">uint8_t</span> *)rx_buf, <span class="number">9</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>嵌入式</tag>
        <tag>物联网</tag>
      </tags>
  </entry>
  <entry>
    <title>人权</title>
    <url>/2022/12/10/%E4%BA%BA%E6%9D%83/</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">hello world!</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="何为人权？"><a href="#何为人权？" class="headerlink" title="何为人权？"></a>何为人权？</h2><blockquote>
<p>人权是所有人与生俱有的权利，它不分种族、性别、国籍、族裔、语言、宗教或任何其他身份地位。人权包括生命和自由的权利、不受奴役和酷刑的权利、意见和言论自由的权利、获得工作和教育的权利以及其他更多权利。人人有权不受歧视地享受这些权利。</p>
</blockquote>
<h2 id="人权包括什么？"><a href="#人权包括什么？" class="headerlink" title="人权包括什么？"></a>人权包括什么？</h2><h3 id="通常包括以下方面的权利"><a href="#通常包括以下方面的权利" class="headerlink" title="通常包括以下方面的权利"></a>通常包括以下方面的权利</h3><p>   <strong>1. 生存权：</strong>个人有权享有生命，不受他人随意剥夺生命的权力。</p>
<p>   <strong>2. 自由权：</strong>包括人身自由、迁徙自由、言论自由、信仰自由等各种自由权。个人有追求个人发展的自由。</p>
<p>   <strong>3. 平等权：</strong>不因人种、肤色、性别、语言、宗教等不同而受到歧视。法律面前人人平等。</p>
<p>   <strong>4. 政治权利：</strong>有选举权和被选举权，可以通过选举民主形式参与政治。</p>
<p>   <strong>5. 思想信仰自由：</strong>个人有独立思考和表达想法的权利，有信仰和不信仰宗教的自由。</p>
<p>   <strong>6. 结社自由：</strong>个人有自由地和平集会以及加入或离开团体的自由。</p>
<p>   <strong>7. 经济权利：</strong>包括工作权、集体谈判权、受教育权、参与文化生活权等。</p>
<p>   <strong>8. 社会权利：</strong>包括免于恐惧和匮乏的生活权，以及享受社会保障和医疗的权利。</p>
<p>   <strong>9. 司法权利：</strong>受到公正审判的权利，以及被认为无罪直到被证明有罪的权利。</p>
<p>   <strong>10. 发展权：</strong>个人应享有持续进步和发展的权利，以提高物质生活和精神生活的水平。</p>
<h2 id="宣扬人权的意义"><a href="#宣扬人权的意义" class="headerlink" title="宣扬人权的意义"></a>宣扬人权的意义</h2><p><strong>简单来说，就是要让更多人明白“人权”是什么，弘扬人权理念，提高全社会的人权意识。让更多人了解什么是人权，人人都应享有的权利。人权实施需要广大民众的参与，同时督促政府履行保护和实现人权的义务，消除歧视、打击侵犯人权行为。更促进社会公正、自由和谐，造就一个崇尚人权、自由平等的文明社会。这是人类持续进步的目标。</strong></p>
<p>##<center>世界人权宣言</center>##<br>###序言###</p>
<p>　　鉴于对人类家庭所有成员的固有尊严及其平等的和不移的权利的承认，乃是世界自由、正义与和平的基础，</p>
<p>　　鉴于对人权的无视和侮蔑已发展为野蛮暴行，这些暴行玷污了人类的良心，而一个人人享有言论和信仰自由并免予恐惧和匮乏的世界的来临，已被宣布为普通人民的最高愿望，</p>
<p>　　鉴于为使人类不致迫不得已铤而走险对暴政和压迫进行反叛，有必要使人权受法治的保护，</p>
<p>　　鉴于有必要促进各国间友好关系的发展，</p>
<p>　　鉴于各联合国国家的人民已在联合国宪章中重申他们对基本人权、人格尊严和价值以及男女平等权利的信念，并决心促成较大自由中的社会进步和生活水平的改善，</p>
<p>　　鉴于各会员国业已誓愿同联合国合作以促进对人权和基本自由的普遍尊重和遵行，</p>
<p>　　鉴于对这些权利和自由的普遍了解对于这个誓愿的充分实现具有很大的重要性，</p>
<p>　　因此现在，</p>
<p>　　大会，</p>
<p>　　发布这一世界人权宣言，作为所有人民和所有国家努力实现的共同标准，以期每一个人和社会机构经常铭念本宣言，努力通过教诲和教育促进对权利和自由的尊重，并通过国家的和国际的渐进措施，使这些权利和自由在各会员国本身人民及在其管辖下领土的人民中得到普遍和有效的承认和遵行；</p>
<h3 id="第一条"><a href="#第一条" class="headerlink" title="第一条"></a>第一条</h3><blockquote>
<p>人人生而自由，在尊严和权利上一律平等。他们赋有理性和良心，并应以兄弟关系的精神相对待。</p>
</blockquote>
<h3 id="第二条"><a href="#第二条" class="headerlink" title="第二条"></a>第二条</h3><blockquote>
<p>人人有资格享有本宣言所载的一切权利和自由，不分种族、肤色、性别、语言、宗教、政治或其他见解、国籍或社会出身、财产、出生或其他身分等任何区别。 并且不得因一人所属的国家或领土的政治的、行政的或者国际的地位之不同而有所区别，无论该领土是独立领土、托管领土、非自治领土或者处于其他任何主权受限制的情况之下。</p>
</blockquote>
<h3 id="第三条"><a href="#第三条" class="headerlink" title="第三条"></a>第三条</h3><blockquote>
<p>人人有权享有生命、自由和人身安全。</p>
</blockquote>
<h3 id="第四条"><a href="#第四条" class="headerlink" title="第四条"></a>第四条</h3><blockquote>
<p>任何人不得使为奴隶或奴役；一切形式的奴隶制度和奴隶买卖，均应予以禁止。</p>
</blockquote>
<h3 id="第五条"><a href="#第五条" class="headerlink" title="第五条"></a>第五条</h3><blockquote>
<p>任何人不得加以酷刑，或施以残忍的、不人道的或侮辱性的待遇或刑罚。</p>
</blockquote>
<h3 id="第六条"><a href="#第六条" class="headerlink" title="第六条"></a>第六条</h3><blockquote>
<p>人人在任何地方有权被承认在法律前的人格。</p>
</blockquote>
<h3 id="第七条"><a href="#第七条" class="headerlink" title="第七条"></a>第七条</h3><blockquote>
<p>法律之前人人平等，并有权享受法律的平等保护，不受任何歧视。人人有权享受平等保护，以免受违反本宣言的任何歧视行为以及煽动这种歧视的任何行为之害。</p>
</blockquote>
<h3 id="第八条"><a href="#第八条" class="headerlink" title="第八条"></a>第八条</h3><blockquote>
<p>任何人当宪法或法律所赋予他的基本权利遭受侵害时，有权由合格的国家法庭对这种侵害行为作有效的补救。</p>
</blockquote>
<h3 id="第九条"><a href="#第九条" class="headerlink" title="第九条"></a>第九条</h3><blockquote>
<p>任何人不得加以任意逮捕、拘禁或放逐。</p>
</blockquote>
<h3 id="第十条"><a href="#第十条" class="headerlink" title="第十条"></a>第十条</h3><blockquote>
<p>人人完全平等地有权由一个独立而无偏倚的法庭进行公正的和公开的审讯，以确定他的权利和义务并判定对他提出的任何刑事指控。</p>
</blockquote>
<h3 id="第十一条"><a href="#第十一条" class="headerlink" title="第十一条"></a>第十一条</h3><blockquote>
<p>㈠ 凡受刑事控告者，在未经获得辩护上所需的一切保证的公开审判而依法证实有罪以前，有权被视为无罪。<br>㈡ 任何人的任何行为或不行为，在其发生时依国家法或国际法均不构成刑事罪者，不得被判为犯有刑事罪。刑罚不得重于犯罪时适用的法律规定。</p>
</blockquote>
<h3 id="第十二条"><a href="#第十二条" class="headerlink" title="第十二条"></a>第十二条</h3><blockquote>
<p>任何人的私生活、家庭、住宅和通信不得任意干涉，他的荣誉和名誉不得加以攻击。人人有权享受法律保护，以免受这种干涉或攻击。</p>
</blockquote>
<p>###第十三条###</p>
<blockquote>
<p>㈠ 人人在各国境内有权自由迁徙和居住。<br>㈡ 人人有权离开任何国家，包括其本国在内，并有权返回他的国家。<br>###第十四条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人有权在其他国家寻求和享受庇护以避免迫害。<br>㈡ 在真正由于非政治性的罪行或违背联合国的宗旨和原则的行为而被起诉的情况下，不得援用此种权利。<br>###第十五条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人有权享有国籍。<br>㈡ 任何人的国籍不得任意剥夺，亦不得否认其改变国籍的权利。<br>###第十六条###</p>
</blockquote>
<blockquote>
<p>㈠ 成年男女，不受种族、国籍或宗教的任何限制有权婚嫁和成立家庭。他们在婚姻方面，在结婚期间和在解除婚约时，应有平等的权利。<br>㈡ 只有经男女双方的自由和完全的同意，才能缔婚。<br>㈢ 家庭是天然的和基本的社会单元，并应受社会和国家的保护。<br>###第十七条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人得有单独的财产所有权以及同他人合有的所有权。<br>㈡ 任何人的财产不得任意剥夺。<br>###第十八条###<br>人人有思想、良心和宗教自由的权利；此项权利包括改变他的宗教或信仰的自由，以及单独或集体、公开或秘密地以教义、实践、礼拜和戒律表示他的宗教或信仰的自由。<br>###第十九条###</p>
</blockquote>
<blockquote>
<p>人人有权享有主张和发表意见的自由；此项权利包括持有主张而不受干涉的自由，和通过任何媒介和不论国界寻求、接受和传递消息和思想的自由。<br>###第二十条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人有权享有和平集会和结社的自由。<br>㈡ 任何人不得迫使隶属于某一团体。<br>###第二十一条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人有直接或通过自由选择的代表参与治理本国的权利。<br>㈡ 人人有平等机会参加本国公务的权利。<br>㈢ 人民的意志是政府权力的基础；这一意志应以定期的和真正的选举予以表现，而选举应依据普遍和平等的投票权，并以不记名投票或相当的自由投票程序进行。<br>###第二十二条###</p>
</blockquote>
<blockquote>
<p>每个人，作为社会的一员，有权享受社会保障，并有权享受他的个人尊严和人格的自由发展所必需的经济、社会和文化方面各种权利的实现，这种实现是通过国家努力和国际合作并依照各国的组织和资源情况。<br>###第二十三条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人有权工作、自由选择职业、享受公正和合适的工作条件并享受免于失业的保障。<br>㈡ 人人有同工同酬的权利，不受任何歧视。<br>㈢ 每一个工作的人，有权享受公正和合适的报酬，保证使他本人和家属有一个符合人的尊严的生活条件，必要时并辅以其他方式的社会保障。<br>㈣ 人人有为维护其利益而组织和参加工会的权利。<br>###第二十四条###</p>
</blockquote>
<blockquote>
<p>人人有享有休息和闲暇的权利，包括工作时间有合理限制和定期给薪休假的权利。<br>###第二十五条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人有权享受为维持他本人和家属的健康和福利所需的生活水准，包括食物、衣着、住房、医疗和必要的社会服务；在遭到失业、疾病、残废、守寡、衰老或在其他不能控制的情况下丧失谋生能力时，有权享受保障。<br>㈡ 母亲和儿童有权享受特别照顾和协助。一切儿童，无论婚生或非婚生，都应享受同样的社会保护。<br>###第二十六条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人都有受教育的权利，教育应当免费，至少在初级和基本阶段应如此。初级教育应属义务性质。技术和职业教育应普遍设立。高等教育应根据成绩而对一切人平等开放。<br>㈡ 教育的目的在于充分发展人的个性并加强对人权和基本自由的尊重。教育应促进各国、各种族或各宗教集团间的了解、容忍和友谊，并应促进联合国维护和平的各项活动。<br>㈢ 父母对其子女所应受的教育的种类，有优先选择的权利。<br>###第二十七条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人有权自由参加社会的文化生活，享受艺术，并分享科学进步及其产生的福利。<br>㈡ 人人对由于他所创作的任何科学、文学或美术作品而产生的精神的和物质的利益，有享受保护的权利。<br>###第二十八条###</p>
</blockquote>
<blockquote>
<p>人人有权要求一种社会的和国际的秩序，在这种秩序中，本宣言所载的权利和自由能获得充分实现。<br>###第二十九条###</p>
</blockquote>
<blockquote>
<p>㈠ 人人对社会负有义务，因为只有在社会中他的个性才可能得到自由和充分的发展。<br>㈡ 人人在行使他的权利和自由时，只受法律所确定的限制，确定此种限制的唯一目的在于保证对旁人的权利和自由给予应有的承认和尊重，并在一个民主的社会中适应道德、公共秩序和普遍福利的正当需要。<br>㈢ 这些权利和自由的行使，无论在任何情形下均不得违背联合国的宗旨和原则。<br>###第三十条###<br>本宣言的任何条文，不得解释为默许任何国家、集团或个人有权进行任何旨在破坏本宣言所载的任何权利和自由的活动或行为。</p>
</blockquote>
]]></content>
      <categories>
        <category>随想</category>
      </categories>
      <tags>
        <tag>freedom</tag>
        <tag>随记</tag>
      </tags>
  </entry>
  <entry>
    <title>SLAM 之 cartographer 安装</title>
    <url>/2023/11/03/SLAM-%E4%B9%8B-cartographer-%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<ul>
<li><strong>安装环境</strong>：Ubuntu20.04-&gt;ROS-&lt;noetic&gt;</li>
</ul>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><h4 id="1-基本的"><a href="#1-基本的" class="headerlink" title="1. 基本的"></a>1. 基本的</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y \</span><br><span class="line">    cmake \</span><br><span class="line">    g++ \</span><br><span class="line">    git \</span><br><span class="line">    google-mock \</span><br><span class="line">    libboost-all-dev \</span><br><span class="line">    libcairo2-dev \</span><br><span class="line">    libeigen3-dev \</span><br><span class="line">    libgflags-dev \</span><br><span class="line">    libgoogle-glog-dev \</span><br><span class="line">    liblua5.2-dev \</span><br><span class="line">    libsuitesparse-dev \</span><br><span class="line">    libwebp-dev \</span><br><span class="line">    ninja-build \</span><br><span class="line">    protobuf-compiler \</span><br><span class="line">    python3-sphinx</span><br></pre></td></tr></table></figure>

<h4 id="2-对于cartographer环境安装脚本"><a href="#2-对于cartographer环境安装脚本" class="headerlink" title="2. 对于cartographer环境安装脚本"></a>2. 对于cartographer环境安装脚本</h4><p>下载压缩包<a href="https://www.123pan.com/s/00f0Vv-AVHq.html">carto脚本</a></p>
<p>解压缩，进入文件夹，右键空白在终端打开。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x auto-carto-build.sh		<span class="comment">#赋予执行权限</span></span><br><span class="line">./auto-carto-build.sh				<span class="comment">#运行脚本</span></span><br></pre></td></tr></table></figure>

<p>等待编译完成，时间较长，耐心等待。</p>
<h3 id="下载cartographer"><a href="#下载cartographer" class="headerlink" title="下载cartographer"></a>下载cartographer</h3><h4 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h4><p><code>Ctrl+Alt+t</code>打开终端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载项目</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/xiangli0608/cartographer_detailed_comments_ws.git</span><br></pre></td></tr></table></figure>

<p>将下载好的文件夹重命名为<code>cartographer_ws</code></p>
<h4 id="2-编译-cartographer"><a href="#2-编译-cartographer" class="headerlink" title="2. 编译 cartographer"></a>2. <strong>编译 cartographer</strong></h4><p> 运行工作空间下的 <code>catkin_make.sh</code> 脚本。脚本中的内容其实就是<code>catkin_make_isolated --install --use-ninja</code>，外加s<code>ource install_isolated/setup.bash</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/cartographer_ws		<span class="comment">#进入目录</span></span><br><span class="line">./catkin_make.sh			<span class="comment">#进行编译</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：每修改一次源码，就要重新删除之前编译的文件，重新编译。若要测试，请先完成<a href="#test">测试</a>，修改完路径再编译，省点时间。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./rm_build.sh			<span class="comment">#删除编译生成的文件</span></span><br><span class="line">./catkin_make.sh		<span class="comment">#进行重新编译</span></span><br></pre></td></tr></table></figure>

<ul>
<li>时间很长~~~~</li>
</ul>
<p>当没有出现报错，基本已经成功。</p>
<div id="test"></div>

<h4 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h4><h5 id="3-1-下载bagfiles"><a href="#3-1-下载bagfiles" class="headerlink" title="3.1. 下载bagfiles"></a>3.1. 下载bagfiles</h5><p><a href="https://www.123pan.com/s/00f0Vv-QVHq.html">bagfiles下载链接</a></p>
<p>这里都将使用李想大佬修改过的launch文件，进行建图。因为launch文件将会自动播放bagfile包，所以我们需要修改launch文件中的bagfile存在的路径，具体如下  </p>
<h5 id="3-2-修改路径"><a href="#3-2-修改路径" class="headerlink" title="3.2. 修改路径"></a>3.2. 修改路径</h5><p>例如，我的路径是<code>/home/&lt;user name&gt;/Downloads/rslidar-outdoor-gps-notf.bag</code><img src="https://i0.wp.com/tvax1.sinaimg.cn/large/008BeftEly1hjht929vhfj30or0ghtbo.jpg" alt="img"></p>
<p>在<code>~/cartographer_ws/src/cartographer_ros/cartographer_ros/launch/lx_rs16_2d_outdoor.launch</code>文件中，修改下图所选路径为你文件所的路径。</p>
<p><img src="https://i0.wp.com/tvax4.sinaimg.cn/large/008BeftEly1hjhtafz64sj30ot0kh14u.jpg" alt="img"></p>
<ul>
<li><strong>修改完请重新编译。</strong></li>
</ul>
<h5 id="3-3-测试"><a href="#3-3-测试" class="headerlink" title="3.3. 测试"></a>3.3. <strong>测试</strong></h5><p>我们通过play对应的bagfile可以模拟对应的传感器的数据，而不需要连接传感器硬件，非常方便。这里我们也将使用到别人已经录制好的bagfile。  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/cartographer_ws		<span class="comment">#进入对应工作空间</span></span><br><span class="line"><span class="built_in">source</span> ./devel_isolated/setup.bash</span><br><span class="line">roslaunch cartographer_ros lx_rs16_2d_outdoor.launch</span><br></pre></td></tr></table></figure>



<p><img src="https://i0.wp.com/tvax4.sinaimg.cn/large/008BeftEly1hjhtbib1eaj30q10fj7cd.jpg" alt="img"></p>
<p>参考链接</p>
<p><a href="https://zhuanlan.zhihu.com/p/557101474?utm_id=0&utm_source=wechat_session&utm_medium=social&s_r=0">Cartographer 环境极速配置 + 2D 3D建图测试</a></p>
<p><a href="https://github.com/xiangli0608/cartographer_detailed_comments_ws">cartographer 超详细注释代码</a></p>
]]></content>
      <categories>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ros</tag>
      </tags>
  </entry>
  <entry>
    <title>函数指针与回调函数</title>
    <url>/2024/01/18/%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%B8%8E%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h3 id="函数指针-Function-Pointer"><a href="#函数指针-Function-Pointer" class="headerlink" title="函数指针(Function Pointer):"></a>函数指针(Function Pointer):</h3><blockquote>
<p>函数指针是指向函数的指针变量。它们允许你将函数的地址存储在一个指针变量中，从而可以通过该指针调用该函数。函数指针的声明类似于函数声明，但需要在前面加上一个指针声明符(*)。</p>
</blockquote>
<p>例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个函数原型</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 声明一个函数指针，与 add 函数具有相同的签名</span></span><br><span class="line">    <span class="type">int</span> (*ptr)(<span class="type">int</span>, <span class="type">int</span>);</span><br><span class="line">    <span class="comment">// 将 add 函数的地址赋给指针变量</span></span><br><span class="line">    ptr = add;</span><br><span class="line">    <span class="comment">// 通过函数指针调用函数</span></span><br><span class="line">    <span class="type">int</span> result = ptr(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Result: %d\n&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="回调函数-Callback-Function"><a href="#回调函数-Callback-Function" class="headerlink" title="回调函数(Callback Function):"></a>回调函数(Callback Function):</h3><blockquote>
<p>回调函数是一种在程序执行期间通过函数指针调用的函数。通常，你将函数的地址传递给另一个函数，并在需要的时候由另一个函数调用。回调函数允许你在某些事件发生时执行特定的操作，从而增强程序的灵活性。</p>
</blockquote>
<p>函数指针变量可以作为某个函数的参数来使用的。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//回调函数，求和</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    接受回调函数作为参数的函数</span></span><br><span class="line"><span class="comment">    int (*b)(int,int)：函数指针变量，将函数作为变量插入新的函数中调用。例如此示例中的&quot;sum&quot;函数作为变量。</span></span><br><span class="line"><span class="comment">    Process(sum,3,4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Process</span><span class="params">(<span class="type">int</span> (*b)(<span class="type">int</span>,<span class="type">int</span>),<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d + a\n&quot;</span>,b(x,y));</span><br><span class="line">    <span class="keyword">return</span> b(x,y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> den = <span class="number">2</span>;</span><br><span class="line">    <span class="comment">//定义函数指针变量，指针指向函数地址；</span></span><br><span class="line">    <span class="type">int</span> (*p)(<span class="type">int</span>,<span class="type">int</span>);</span><br><span class="line">    p=sum;</span><br><span class="line">    <span class="type">int</span> c = p(num,den);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,Process(p,<span class="number">3</span>,<span class="number">4</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">7</span> + a</span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>嵌入式</tag>
        <tag>c/c++</tag>
      </tags>
  </entry>
  <entry>
    <title>安装ROS</title>
    <url>/2023/10/19/%E5%AE%89%E8%A3%85ROS/</url>
    <content><![CDATA[<h3 id="1-设置sources-list"><a href="#1-设置sources-list" class="headerlink" title="1.设置sources.list"></a>1.设置sources.list</h3><p>设置电脑添加以安装来自packages.ros.org的软件。  以下按照网络环境二选一即可，鉴于国内网络环境😓，推荐第二个清华源。</p>
<p>终端输入：</p>
<p>官方源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sh -c <span class="string">&#x27;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br></pre></td></tr></table></figure>

<p>清华源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sh -c <span class="string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-设置密钥"><a href="#2-设置密钥" class="headerlink" title="2.设置密钥"></a>2.设置密钥</h3><p>终端输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-key adv --keyserver <span class="string">&#x27;hkp://keyserver.ubuntu.com:80&#x27;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br></pre></td></tr></table></figure>

<p>若无法连接到密钥服务器，建议更换网络重试。</p>
<h3 id="3-开始安装"><a href="#3-开始安装" class="headerlink" title="3.开始安装"></a>3.开始安装</h3><p>终端输入：</p>
<ul>
<li>更新软件索引apt</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<p>本次安装ROS版本代号为<noetic>,此版本为最后一版ros1,官方将持续维护更新止2025年。</p>
<ul>
<li>安装完整桌面版</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install ros-noetic-desktop-full</span><br></pre></td></tr></table></figure>

<ul>
<li>安装其他软件包</li>
</ul>
<p>在ROS中还有更多可用的软件包。你可以直接安装一个特定的软件包。  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install ros-noetic-包名</span><br></pre></td></tr></table></figure>

<h3 id="3-设置环境"><a href="#3-设置环境" class="headerlink" title="3.设置环境"></a>3.设置环境</h3><p> 命令可以在每次启动新的shell窗口时很方便地为你自动source一下这个脚本：  </p>
<p>终端输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/noetic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>



<p>安装已进入尾声，在终端输入<code>rosversion -d</code>，看到输出为<code>noetic</code>,则表示安装顺利成功。😄</p>
<p>end~</p>
]]></content>
      <categories>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ros</tag>
      </tags>
  </entry>
  <entry>
    <title>思想</title>
    <url>/2021/09/01/%E6%80%9D%E6%83%B3/</url>
    <content><![CDATA[<blockquote>
<p><em><strong>有亡国，有亡天下。亡国与亡天下奚辨？曰：易姓改号，谓之亡国。仁义充塞，而至率兽食人，人将相食，谓之亡天下。</strong></em></p>
<p style="text-align: right; font-style: italic; font-weight: bold;">——《日知录·正始》</p>
</blockquote>
<blockquote>
<p><em><strong>少年自有少年志，当论天下不平事，若至小人当道时，拔剑三尺敢换日</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>爱国很容易，只需要付出口水，爱别人太难，那是要付出行动的。</strong></em></p>
</blockquote>
<blockquote>
<p>***愚昧才是一切的根源，愚昧是因为一直拒绝被启蒙，如果帝国主义的侵略想一把匕首，那么愚昧封建就是民族的毒药 ***</p>
</blockquote>
<blockquote>
<p style="text-align: right; font-style: italic; font-weight: bold;">——胡适</p> 
</blockquote>
<blockquote>
<p><em><strong>今日若我冷眼旁观，他日祸临己身，则无人为我摇旗呐喊</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>战争结束后，政治家握手言和，资本家赚的盆满钵满，只有母亲含泪埋葬自己的孩子</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>迟来的阳光救不了枯萎的向日葵</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>如果孩子的出生是为了继承自己的劳碌，恐慌，贫困，那么，不生也是善良</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>世界上最无耻、最阴险、最歹毒的赞美，就是用穷人的艰辛和苦难，当做励志故事愚弄底层人。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>想要毁掉一个民族，抽调男人身上的脊梁和血气，拿掉女人身上的善良和廉耻</strong></em></p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>freedom</tag>
        <tag>随记</tag>
      </tags>
  </entry>
  <entry>
    <title>文艺</title>
    <url>/2023/06/21/%E6%96%87%E8%89%BA/</url>
    <content><![CDATA[<blockquote>
<p><em><strong>时间照例无情的向前走，光阴斑驳从树荫中更替，我在无人之地无声的死亡腐烂。为终将枯萎的花供养。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>落泪是有原因的，眼里是你的力量，不是弱点。</strong></em></p>
</blockquote>
<blockquote>
<p>**<em>人真是奇怪的动物，群居就有矛盾，独处就会寂寞孤单。</em> **</p>
<p style="text-align: right; font-style: italic; font-weight: bold;">——电影《寂寞的哨所》</p> 
</blockquote>
<blockquote>
<p><em><strong>Your time is limited, so don’t waste it living someone else’s life.</strong></em></p>
</blockquote>
<blockquote>
<p style="text-align: right; font-style: italic; font-weight: bold;">Steve Jobs</p> 
</blockquote>
<blockquote>
<p><em><strong>荒凉白日里，我被禁锢在陈朽的黑白梦境中，这里乌云蔽日，寸草不生，万物都荒芜。直到你从荒原中走过。你踏过之处，世界开始苏醒，我看见野花压满枝头沿途狂野生长，白雪滑落树梢寒梅怒放，我看见归鸟鸣蝉，烈日骄阳。我看见白日梦的尽头是你，从此天光大亮。你是我全部的渴望与幻想。</strong></em></p>
</blockquote>
<blockquote>
<p style="text-align: right; font-style: italic; font-weight: bold;">——《白日梦我》</p>
</blockquote>
<blockquote>
<p><em><strong>岁月落下的苍白，落下的一份孤独，只能静坐在时光的角落，用文字去祭奠那些逝去的光阴，那千载难寻的梦境，早被傍晚的余辉扯成了彩色的幻觉，留在清静空灵世界上，寻一处灵魂的栖息地，诉说一段诗歌年华。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>如花似叶，岁岁年年，共占春风</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>飞光飞光，劝尔一杯酒，吾不识青天高，黄地厚，唯见月寒日暖，来煎人寿</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>孤独是一个人的狂欢，狂欢是一群人的孤独</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>也许我该追随黄昏而去，而不是期待明日的清晨</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>思念从不会如惊涛骇浪般汹涌而来，却也不妨碍它会像浪花一样从不间断一遍遍拍打着情绪</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>人活着就是有意义的，生而平凡，各有各路，我们总是把幸福定为终点，怎么说呢，当代人的欲望是无尽的，因为这样，我们很难满足，因为这样，幸福何谈？如果我们生下来时，物质就很困难，我们将很容易幸福，我穷其一生的敬，善，忠，义，使我这一遭没白走，希望以后也如此，我很渺小,你很平凡，愿芸芸众生，各有所安。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>你我目标本就不是罗马，何不期待今晚的风和月光。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>惟江上之清风，与山间之明月，耳得之而为声，目遇之而成色，取之无禁，用之不竭，是造物者之无尽藏也，而吾与子之所共适。</strong></em></p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>文学</tag>
      </tags>
  </entry>
  <entry>
    <title>短信轰炸</title>
    <url>/2022/09/21/%E7%9F%AD%E4%BF%A1%E8%BD%B0%E7%82%B8/</url>
    <content><![CDATA[<blockquote>
<p>smsboom是一个短信轰炸程序,由于国内大多数网站为提高注册率及用户注册效率，并没有设置安全验证，因此它通过调用这些网站验证码接口，实现短时间内向目标手机号发送大量短信验证码，以此实现轰炸。<span id="more"></span></p>
</blockquote>
<ul>
<li>SMSBoom项目地址:<a href="https://github.com/OpenEthan/SMSBoom">Github</a>;</li>
</ul>
<h2 id="Linux使用方法"><a href="#Linux使用方法" class="headerlink" title="Linux使用方法"></a>Linux使用方法</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ol>
<li>可以直接去Github下载。</li>
<li>使用git<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AdminWhaleFall/SMSBoom.git/</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><ul>
<li>需要python3.8以上</li>
</ul>
<ol>
<li>安装所需库<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></li>
<li>运行smsboom.py<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 smsboom.py</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><ol>
<li>第一次使用前，一定要更新接口</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 smsboom.py update</span><br></pre></td></tr></table></figure>
<p>**ps:**更新失败的话，可以直接到GitHub仓库下载api.json文件，替换就可以了。</p>
<ol start="2">
<li>使用轰炸</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 smsboom.py run -t 64 -p 198xxxxxxxx </span><br></pre></td></tr></table></figure>
<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><p><a href="https://zhanghe666.lanzouy.com/iLZc50l4kfsj">smsboom.exe</a><br>密码:6neu</p>
<h3 id="在文件路径下输入cmd，回车"><a href="#在文件路径下输入cmd，回车" class="headerlink" title="在文件路径下输入cmd，回车"></a>在文件路径下输入cmd，回车</h3><p><img src="C:\Users\Pursue\Pictures\typecho\008BeftEly1hj3ab8ez4qj30kg04qq3h.jpg" alt="图片"></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li>更新接口<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smsboom.exe update</span><br></pre></td></tr></table></figure>
启动64个线程,轰炸一个人的手机号(198xxxxxxxx),只轰炸一波。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smsboom.exe run -t 64 -p 198xxxxxxxxx</span><br></pre></td></tr></table></figure>
启动64个线程,轰炸一个人的手机号(19xxxxxxx),启动循环轰炸, 轮番轰炸60次<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smsboom.exe run -t 64 -p 198xxxxxxxxx -f 60</span><br></pre></td></tr></table></figure>
启动64个线程,轰炸一个人的手机号(19xxxxxxx),启动循环轰炸, 轮番轰炸60次, 每次间隔30秒<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smsboom.exe run -t 64 -p 198xxxxxxxxx -f 60 -i 30</span><br></pre></td></tr></table></figure>
启动64个线程,轰炸一个人的手机号(19xxxxxxx),启动循环轰炸, 轮番轰炸60次, 每次间隔30秒, 开启代理列表进行轰炸<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smsboom.exe run -t 64 -p 198xxxxxxxxx -f 60 -i 30 -e</span><br></pre></td></tr></table></figure>
启动64个线程,轰炸多个人的手机号(138xxx,139xxxx),启动循环轰炸, 轮番轰炸60次, 每次间隔30秒, 开启代理列表进行轰炸<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smsboom.exe run -t 64 -p 138xxxxxxxx -p 139xxxxxxxx -f 60 -i 30 -e</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>如果方法不成功，建议去项目地址看比较详细的教程</strong></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>诗歌</title>
    <url>/2022/10/10/%E8%AF%97%E6%AD%8C/</url>
    <content><![CDATA[<blockquote>
<p><em><strong>二八佳人体似酥，腰间仗剑斩凡夫。虽然不见人头落，暗里教君骨髓枯。</strong></em></p>
<p style="text-align: right; font-style: italic; font-weight: bold;">——吕岩«警世»</p>
</blockquote>
<blockquote>
<p><em><strong>看水看山独坐，听风听雨高眠。客去客来日日，花开花落年年。</strong></em></p>
<p style="text-align: right; font-style: italic; font-weight: bold;">——徐贲«写意»</p>
</blockquote>
<blockquote>
<p><em><strong>孩儿立志出乡关，学不成名誓不还。埋骨何须桑梓地，人生无处不青山。</strong></em></p>
<p style="text-align: right; font-style: italic; font-weight: bold;">——毛泽东«七绝·改诗赠父亲»</p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>随记</tag>
        <tag>诗歌</tag>
      </tags>
  </entry>
  <entry>
    <title>浪漫</title>
    <url>/2022/04/13/%E6%B5%AA%E6%BC%AB/</url>
    <content><![CDATA[<blockquote>
<p><em><strong>爱自己才是终身浪漫的开始。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>我天天打扰你，总是给你发消息，找你聊天，不是因为我无聊，而是我在乎你，我天天问你在做什么，也不是我闲的慌，而是我惦记你，我对你好呢，也不是我亏欠你什么，而是你在我心里占据了很重要的位置，现在想想可能是我太主动了，让我觉得我的感情很廉价，但是你不知道，其实我不是一个主动的人，我也不是对谁都这样，只是因为那个人是你。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>我愿在泥潭里摸爬滚打，也要把我爱的人高高举起。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>遇见你，我的心上开出漫山遍野的花。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>真正的爱一定不是瞬间的感动，而必然是一种恒久的委身，彼此牺牲，彼此成就，彼此追逐。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>两个人吵架，先低头的那个人不一定是错的，但是一定是最在乎的。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>爱一个人就像在海滩上捡贝壳，不要捡最大的，也不要捡最漂亮的，就捡你最喜欢的那一个，捡到了就永远不要再去海滩。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>如果喜欢有理由，那么这个喜欢就是不纯正的。假如说我喜欢你的长发，哪天你剪了短发，我就不喜欢你了？不，不是这样的，我喜欢你就是喜欢你，没有什么为什么。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>海鸟跟鱼相爱，云与海浪交怀。你我明明未隔空与海，何故将欢喜紧揣，慌于表白。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>有意义的人等再久都不算久，爱只会在没见面的日子里更加浓烈。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>值不值得有意义吗 做我所想 爱我所爱 何必顾及流言蜚语。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>浪漫的不一定是夏天，而是有你的夏天。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>可是我几乎不主动聊天，不主动约人。能让我主动的人，真的是我打心眼里喜欢到不行的人。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>她最大的吸引力，就是你的想像力吧。</strong></em></p>
</blockquote>
<blockquote>
<p><em><strong>拖着疲惫不堪的身体回到租房，妻子低声数落着柴米油盐贵，不知何时能剩下钱买房，顽皮的孩子看着电视剧，被你责备撵去写功课，年迈的父母体力不及当年，在乡下守着二亩地望子成龙，可你知道，你只是芸芸众生中的一个普通人，此时你骤然想起小时的理想：不是房子、车子，是成为一个科学家、是一个宇航员…你拿起筷子，夹起菜，不出所料，妻子做的菜盐又放多了，嘴里咸，心中咸，可是你吐不出来，因为你知道来之不易，不能浪费，这咸了的菜如你的人生一样：咸苦，你皱着眉头咬着牙咽了下去，而后摸了摸孩子的头，把不多的肉夹给他，让他刻苦学习，你的余生如接棒一般传给了孩子，希望他不被经济压迫生活，可以肆意的追寻梦想，不用品尝那咸苦的菜。</strong></em></p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
  </entry>
</search>
